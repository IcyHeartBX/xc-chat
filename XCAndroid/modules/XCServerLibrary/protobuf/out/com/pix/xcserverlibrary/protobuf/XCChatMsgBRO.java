// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: xc_protoc.proto at 62:1
package com.pix.xcserverlibrary.protobuf;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * (公聊)消息返回 2016年06月30日20:41:53 更改
 */
public final class XCChatMsgBRO extends Message<XCChatMsgBRO, XCChatMsgBRO.Builder> {
  public static final ProtoAdapter<XCChatMsgBRO> ADAPTER = new ProtoAdapter_XCChatMsgBRO();

  private static final long serialVersionUID = 0L;

  /**
   * 发送者
   */
  @WireField(
      tag = 1,
      adapter = "com.pix.xcserverlibrary.protobuf.ChatPlayer#ADAPTER"
  )
  public final ChatPlayer player;

  @WireField(
      tag = 2,
      adapter = "com.pix.xcserverlibrary.protobuf.XCChatMsg#ADAPTER"
  )
  public final XCChatMsg chat;

  public XCChatMsgBRO(ChatPlayer player, XCChatMsg chat) {
    this(player, chat, ByteString.EMPTY);
  }

  public XCChatMsgBRO(ChatPlayer player, XCChatMsg chat, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.player = player;
    this.chat = chat;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.player = player;
    builder.chat = chat;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof XCChatMsgBRO)) return false;
    XCChatMsgBRO o = (XCChatMsgBRO) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(player, o.player)
        && Internal.equals(chat, o.chat);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (player != null ? player.hashCode() : 0);
      result = result * 37 + (chat != null ? chat.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (player != null) builder.append(", player=").append(player);
    if (chat != null) builder.append(", chat=").append(chat);
    return builder.replace(0, 2, "XCChatMsgBRO{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<XCChatMsgBRO, Builder> {
    public ChatPlayer player;

    public XCChatMsg chat;

    public Builder() {
    }

    /**
     * 发送者
     */
    public Builder player(ChatPlayer player) {
      this.player = player;
      return this;
    }

    public Builder chat(XCChatMsg chat) {
      this.chat = chat;
      return this;
    }

    @Override
    public XCChatMsgBRO build() {
      return new XCChatMsgBRO(player, chat, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_XCChatMsgBRO extends ProtoAdapter<XCChatMsgBRO> {
    ProtoAdapter_XCChatMsgBRO() {
      super(FieldEncoding.LENGTH_DELIMITED, XCChatMsgBRO.class);
    }

    @Override
    public int encodedSize(XCChatMsgBRO value) {
      return (value.player != null ? ChatPlayer.ADAPTER.encodedSizeWithTag(1, value.player) : 0)
          + (value.chat != null ? XCChatMsg.ADAPTER.encodedSizeWithTag(2, value.chat) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, XCChatMsgBRO value) throws IOException {
      if (value.player != null) ChatPlayer.ADAPTER.encodeWithTag(writer, 1, value.player);
      if (value.chat != null) XCChatMsg.ADAPTER.encodeWithTag(writer, 2, value.chat);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public XCChatMsgBRO decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.player(ChatPlayer.ADAPTER.decode(reader)); break;
          case 2: builder.chat(XCChatMsg.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public XCChatMsgBRO redact(XCChatMsgBRO value) {
      Builder builder = value.newBuilder();
      if (builder.player != null) builder.player = ChatPlayer.ADAPTER.redact(builder.player);
      if (builder.chat != null) builder.chat = XCChatMsg.ADAPTER.redact(builder.chat);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
