// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xc_protoc.proto

#include "xc_protoc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_xc_5fprotoc_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_xc_5fprotoc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ChatPlayer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_xc_5fprotoc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_XCChatMsg;
}  // namespace protobuf_xc_5fprotoc_2eproto
namespace xc {
namespace protoc {
class XCAliveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XCAlive>
      _instance;
} _XCAlive_default_instance_;
class XCAliveACKDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XCAliveACK>
      _instance;
} _XCAliveACK_default_instance_;
class XCLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XCLogin>
      _instance;
} _XCLogin_default_instance_;
class XCLoginACKDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XCLoginACK>
      _instance;
} _XCLoginACK_default_instance_;
class XCLogoutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XCLogout>
      _instance;
} _XCLogout_default_instance_;
class XCServerCloseBRODefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XCServerCloseBRO>
      _instance;
} _XCServerCloseBRO_default_instance_;
class ChatPlayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChatPlayer>
      _instance;
} _ChatPlayer_default_instance_;
class XCOnlineCountBRODefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XCOnlineCountBRO>
      _instance;
} _XCOnlineCountBRO_default_instance_;
class XCChatMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XCChatMsg>
      _instance;
} _XCChatMsg_default_instance_;
class XCChatMsgBRODefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XCChatMsgBRO>
      _instance;
} _XCChatMsgBRO_default_instance_;
class XCSystemMsgBRODefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XCSystemMsgBRO>
      _instance;
} _XCSystemMsgBRO_default_instance_;
}  // namespace protoc
}  // namespace xc
namespace protobuf_xc_5fprotoc_2eproto {
static void InitDefaultsXCAlive() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xc::protoc::_XCAlive_default_instance_;
    new (ptr) ::xc::protoc::XCAlive();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xc::protoc::XCAlive::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_XCAlive =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsXCAlive}, {}};

static void InitDefaultsXCAliveACK() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xc::protoc::_XCAliveACK_default_instance_;
    new (ptr) ::xc::protoc::XCAliveACK();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xc::protoc::XCAliveACK::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_XCAliveACK =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsXCAliveACK}, {}};

static void InitDefaultsXCLogin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xc::protoc::_XCLogin_default_instance_;
    new (ptr) ::xc::protoc::XCLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xc::protoc::XCLogin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_XCLogin =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsXCLogin}, {}};

static void InitDefaultsXCLoginACK() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xc::protoc::_XCLoginACK_default_instance_;
    new (ptr) ::xc::protoc::XCLoginACK();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xc::protoc::XCLoginACK::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_XCLoginACK =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsXCLoginACK}, {}};

static void InitDefaultsXCLogout() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xc::protoc::_XCLogout_default_instance_;
    new (ptr) ::xc::protoc::XCLogout();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xc::protoc::XCLogout::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_XCLogout =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsXCLogout}, {}};

static void InitDefaultsXCServerCloseBRO() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xc::protoc::_XCServerCloseBRO_default_instance_;
    new (ptr) ::xc::protoc::XCServerCloseBRO();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xc::protoc::XCServerCloseBRO::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_XCServerCloseBRO =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsXCServerCloseBRO}, {}};

static void InitDefaultsChatPlayer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xc::protoc::_ChatPlayer_default_instance_;
    new (ptr) ::xc::protoc::ChatPlayer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xc::protoc::ChatPlayer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChatPlayer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChatPlayer}, {}};

static void InitDefaultsXCOnlineCountBRO() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xc::protoc::_XCOnlineCountBRO_default_instance_;
    new (ptr) ::xc::protoc::XCOnlineCountBRO();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xc::protoc::XCOnlineCountBRO::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_XCOnlineCountBRO =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsXCOnlineCountBRO}, {}};

static void InitDefaultsXCChatMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xc::protoc::_XCChatMsg_default_instance_;
    new (ptr) ::xc::protoc::XCChatMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xc::protoc::XCChatMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_XCChatMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsXCChatMsg}, {}};

static void InitDefaultsXCChatMsgBRO() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xc::protoc::_XCChatMsgBRO_default_instance_;
    new (ptr) ::xc::protoc::XCChatMsgBRO();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xc::protoc::XCChatMsgBRO::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_XCChatMsgBRO =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsXCChatMsgBRO}, {
      &protobuf_xc_5fprotoc_2eproto::scc_info_ChatPlayer.base,
      &protobuf_xc_5fprotoc_2eproto::scc_info_XCChatMsg.base,}};

static void InitDefaultsXCSystemMsgBRO() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xc::protoc::_XCSystemMsgBRO_default_instance_;
    new (ptr) ::xc::protoc::XCSystemMsgBRO();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xc::protoc::XCSystemMsgBRO::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_XCSystemMsgBRO =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsXCSystemMsgBRO}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_XCAlive.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XCAliveACK.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XCLogin.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XCLoginACK.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XCLogout.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XCServerCloseBRO.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChatPlayer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XCOnlineCountBRO.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XCChatMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XCChatMsgBRO.base);
  ::google::protobuf::internal::InitSCC(&scc_info_XCSystemMsgBRO.base);
}

::google::protobuf::Metadata file_level_metadata[11];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCAlive, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCAlive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCAlive, clienttime_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCAliveACK, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCAliveACK, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCAliveACK, servertime_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCLogin, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCLogin, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCLogin, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCLogin, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCLogin, reconnect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCLogin, name_),
  2,
  3,
  0,
  4,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCLoginACK, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCLoginACK, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCLoginACK, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCLoginACK, ismanager_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCLoginACK, onlineusers_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCLogout, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCLogout, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCServerCloseBRO, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCServerCloseBRO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCServerCloseBRO, msg_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::ChatPlayer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::ChatPlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::ChatPlayer, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::ChatPlayer, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::ChatPlayer, headimg_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCOnlineCountBRO, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCOnlineCountBRO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCOnlineCountBRO, count_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCChatMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCChatMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCChatMsg, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCChatMsg, content_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCChatMsgBRO, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCChatMsgBRO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCChatMsgBRO, player_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCChatMsgBRO, chat_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCSystemMsgBRO, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCSystemMsgBRO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCSystemMsgBRO, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::xc::protoc::XCSystemMsgBRO, content_),
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::xc::protoc::XCAlive)},
  { 7, 13, sizeof(::xc::protoc::XCAliveACK)},
  { 14, 24, sizeof(::xc::protoc::XCLogin)},
  { 29, 37, sizeof(::xc::protoc::XCLoginACK)},
  { 40, 45, sizeof(::xc::protoc::XCLogout)},
  { 45, 51, sizeof(::xc::protoc::XCServerCloseBRO)},
  { 52, 60, sizeof(::xc::protoc::ChatPlayer)},
  { 63, 69, sizeof(::xc::protoc::XCOnlineCountBRO)},
  { 70, 77, sizeof(::xc::protoc::XCChatMsg)},
  { 79, 86, sizeof(::xc::protoc::XCChatMsgBRO)},
  { 88, 95, sizeof(::xc::protoc::XCSystemMsgBRO)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::xc::protoc::_XCAlive_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xc::protoc::_XCAliveACK_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xc::protoc::_XCLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xc::protoc::_XCLoginACK_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xc::protoc::_XCLogout_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xc::protoc::_XCServerCloseBRO_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xc::protoc::_ChatPlayer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xc::protoc::_XCOnlineCountBRO_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xc::protoc::_XCChatMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xc::protoc::_XCChatMsgBRO_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::xc::protoc::_XCSystemMsgBRO_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "xc_protoc.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017xc_protoc.proto\022\txc.protoc\"\035\n\007XCAlive\022"
      "\022\n\nclientTime\030\001 \001(\004\" \n\nXCAliveACK\022\022\n\nser"
      "verTime\030\001 \001(\004\"V\n\007XCLogin\022\013\n\003uid\030\001 \002(\003\022\016\n"
      "\006roomId\030\002 \002(\003\022\r\n\005token\030\003 \001(\t\022\021\n\treconnec"
      "t\030\004 \002(\010\022\014\n\004name\030\005 \002(\t\"D\n\nXCLoginACK\022\016\n\006r"
      "esult\030\001 \002(\021\022\021\n\tisManager\030\002 \001(\010\022\023\n\013online"
      "Users\030\003 \001(\022\"\n\n\010XCLogout\"\037\n\020XCServerClose"
      "BRO\022\013\n\003msg\030\001 \001(\t\"7\n\nChatPlayer\022\n\n\002id\030\001 \001"
      "(\022\022\014\n\004name\030\002 \001(\t\022\017\n\007headImg\030\003 \001(\t\"!\n\020XCO"
      "nlineCountBRO\022\r\n\005count\030\001 \001(\022\"*\n\tXCChatMs"
      "g\022\014\n\004type\030\001 \001(\021\022\017\n\007content\030\002 \001(\t\"Y\n\014XCCh"
      "atMsgBRO\022%\n\006player\030\001 \001(\0132\025.xc.protoc.Cha"
      "tPlayer\022\"\n\004chat\030\002 \001(\0132\024.xc.protoc.XCChat"
      "Msg\"/\n\016XCSystemMsgBRO\022\014\n\004type\030\001 \001(\021\022\017\n\007c"
      "ontent\030\002 \003(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 572);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "xc_protoc.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_xc_5fprotoc_2eproto
namespace xc {
namespace protoc {

// ===================================================================

void XCAlive::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XCAlive::kClientTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XCAlive::XCAlive()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_xc_5fprotoc_2eproto::scc_info_XCAlive.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xc.protoc.XCAlive)
}
XCAlive::XCAlive(const XCAlive& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clienttime_ = from.clienttime_;
  // @@protoc_insertion_point(copy_constructor:xc.protoc.XCAlive)
}

void XCAlive::SharedCtor() {
  clienttime_ = GOOGLE_ULONGLONG(0);
}

XCAlive::~XCAlive() {
  // @@protoc_insertion_point(destructor:xc.protoc.XCAlive)
  SharedDtor();
}

void XCAlive::SharedDtor() {
}

void XCAlive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XCAlive::descriptor() {
  ::protobuf_xc_5fprotoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xc_5fprotoc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XCAlive& XCAlive::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_xc_5fprotoc_2eproto::scc_info_XCAlive.base);
  return *internal_default_instance();
}


void XCAlive::Clear() {
// @@protoc_insertion_point(message_clear_start:xc.protoc.XCAlive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clienttime_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool XCAlive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xc.protoc.XCAlive)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 clientTime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_clienttime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clienttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xc.protoc.XCAlive)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xc.protoc.XCAlive)
  return false;
#undef DO_
}

void XCAlive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xc.protoc.XCAlive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 clientTime = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->clienttime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xc.protoc.XCAlive)
}

::google::protobuf::uint8* XCAlive::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xc.protoc.XCAlive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 clientTime = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->clienttime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xc.protoc.XCAlive)
  return target;
}

size_t XCAlive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xc.protoc.XCAlive)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint64 clientTime = 1;
  if (has_clienttime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->clienttime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XCAlive::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xc.protoc.XCAlive)
  GOOGLE_DCHECK_NE(&from, this);
  const XCAlive* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XCAlive>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xc.protoc.XCAlive)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xc.protoc.XCAlive)
    MergeFrom(*source);
  }
}

void XCAlive::MergeFrom(const XCAlive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xc.protoc.XCAlive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_clienttime()) {
    set_clienttime(from.clienttime());
  }
}

void XCAlive::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xc.protoc.XCAlive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XCAlive::CopyFrom(const XCAlive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xc.protoc.XCAlive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XCAlive::IsInitialized() const {
  return true;
}

void XCAlive::Swap(XCAlive* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XCAlive::InternalSwap(XCAlive* other) {
  using std::swap;
  swap(clienttime_, other->clienttime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XCAlive::GetMetadata() const {
  protobuf_xc_5fprotoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xc_5fprotoc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XCAliveACK::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XCAliveACK::kServerTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XCAliveACK::XCAliveACK()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_xc_5fprotoc_2eproto::scc_info_XCAliveACK.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xc.protoc.XCAliveACK)
}
XCAliveACK::XCAliveACK(const XCAliveACK& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servertime_ = from.servertime_;
  // @@protoc_insertion_point(copy_constructor:xc.protoc.XCAliveACK)
}

void XCAliveACK::SharedCtor() {
  servertime_ = GOOGLE_ULONGLONG(0);
}

XCAliveACK::~XCAliveACK() {
  // @@protoc_insertion_point(destructor:xc.protoc.XCAliveACK)
  SharedDtor();
}

void XCAliveACK::SharedDtor() {
}

void XCAliveACK::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XCAliveACK::descriptor() {
  ::protobuf_xc_5fprotoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xc_5fprotoc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XCAliveACK& XCAliveACK::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_xc_5fprotoc_2eproto::scc_info_XCAliveACK.base);
  return *internal_default_instance();
}


void XCAliveACK::Clear() {
// @@protoc_insertion_point(message_clear_start:xc.protoc.XCAliveACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servertime_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool XCAliveACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xc.protoc.XCAliveACK)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 serverTime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_servertime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &servertime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xc.protoc.XCAliveACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xc.protoc.XCAliveACK)
  return false;
#undef DO_
}

void XCAliveACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xc.protoc.XCAliveACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 serverTime = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->servertime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xc.protoc.XCAliveACK)
}

::google::protobuf::uint8* XCAliveACK::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xc.protoc.XCAliveACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 serverTime = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->servertime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xc.protoc.XCAliveACK)
  return target;
}

size_t XCAliveACK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xc.protoc.XCAliveACK)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint64 serverTime = 1;
  if (has_servertime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->servertime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XCAliveACK::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xc.protoc.XCAliveACK)
  GOOGLE_DCHECK_NE(&from, this);
  const XCAliveACK* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XCAliveACK>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xc.protoc.XCAliveACK)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xc.protoc.XCAliveACK)
    MergeFrom(*source);
  }
}

void XCAliveACK::MergeFrom(const XCAliveACK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xc.protoc.XCAliveACK)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_servertime()) {
    set_servertime(from.servertime());
  }
}

void XCAliveACK::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xc.protoc.XCAliveACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XCAliveACK::CopyFrom(const XCAliveACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xc.protoc.XCAliveACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XCAliveACK::IsInitialized() const {
  return true;
}

void XCAliveACK::Swap(XCAliveACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XCAliveACK::InternalSwap(XCAliveACK* other) {
  using std::swap;
  swap(servertime_, other->servertime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XCAliveACK::GetMetadata() const {
  protobuf_xc_5fprotoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xc_5fprotoc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XCLogin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XCLogin::kUidFieldNumber;
const int XCLogin::kRoomIdFieldNumber;
const int XCLogin::kTokenFieldNumber;
const int XCLogin::kReconnectFieldNumber;
const int XCLogin::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XCLogin::XCLogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_xc_5fprotoc_2eproto::scc_info_XCLogin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xc.protoc.XCLogin)
}
XCLogin::XCLogin(const XCLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&reconnect_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(reconnect_));
  // @@protoc_insertion_point(copy_constructor:xc.protoc.XCLogin)
}

void XCLogin::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reconnect_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(reconnect_));
}

XCLogin::~XCLogin() {
  // @@protoc_insertion_point(destructor:xc.protoc.XCLogin)
  SharedDtor();
}

void XCLogin::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XCLogin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XCLogin::descriptor() {
  ::protobuf_xc_5fprotoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xc_5fprotoc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XCLogin& XCLogin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_xc_5fprotoc_2eproto::scc_info_XCLogin.base);
  return *internal_default_instance();
}


void XCLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:xc.protoc.XCLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      token_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&uid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&reconnect_) -
        reinterpret_cast<char*>(&uid_)) + sizeof(reconnect_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool XCLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xc.protoc.XCLogin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 roomId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_roomid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xc.protoc.XCLogin.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool reconnect = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_reconnect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reconnect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xc.protoc.XCLogin.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xc.protoc.XCLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xc.protoc.XCLogin)
  return false;
#undef DO_
}

void XCLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xc.protoc.XCLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 uid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uid(), output);
  }

  // required int64 roomId = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->roomid(), output);
  }

  // optional string token = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xc.protoc.XCLogin.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->token(), output);
  }

  // required bool reconnect = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->reconnect(), output);
  }

  // required string name = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xc.protoc.XCLogin.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xc.protoc.XCLogin)
}

::google::protobuf::uint8* XCLogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xc.protoc.XCLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 uid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uid(), target);
  }

  // required int64 roomId = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->roomid(), target);
  }

  // optional string token = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xc.protoc.XCLogin.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->token(), target);
  }

  // required bool reconnect = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->reconnect(), target);
  }

  // required string name = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xc.protoc.XCLogin.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xc.protoc.XCLogin)
  return target;
}

size_t XCLogin::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:xc.protoc.XCLogin)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_uid()) {
    // required int64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uid());
  }

  if (has_roomid()) {
    // required int64 roomId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roomid());
  }

  if (has_reconnect()) {
    // required bool reconnect = 4;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t XCLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xc.protoc.XCLogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001e) ^ 0x0000001e) == 0) {  // All required fields are present.
    // required string name = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int64 uid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uid());

    // required int64 roomId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roomid());

    // required bool reconnect = 4;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string token = 3;
  if (has_token()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XCLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xc.protoc.XCLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const XCLogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XCLogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xc.protoc.XCLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xc.protoc.XCLogin)
    MergeFrom(*source);
  }
}

void XCLogin::MergeFrom(const XCLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xc.protoc.XCLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000004u) {
      uid_ = from.uid_;
    }
    if (cached_has_bits & 0x00000008u) {
      roomid_ = from.roomid_;
    }
    if (cached_has_bits & 0x00000010u) {
      reconnect_ = from.reconnect_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void XCLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xc.protoc.XCLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XCLogin::CopyFrom(const XCLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xc.protoc.XCLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XCLogin::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001e) != 0x0000001e) return false;
  return true;
}

void XCLogin::Swap(XCLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XCLogin::InternalSwap(XCLogin* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(uid_, other->uid_);
  swap(roomid_, other->roomid_);
  swap(reconnect_, other->reconnect_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XCLogin::GetMetadata() const {
  protobuf_xc_5fprotoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xc_5fprotoc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XCLoginACK::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XCLoginACK::kResultFieldNumber;
const int XCLoginACK::kIsManagerFieldNumber;
const int XCLoginACK::kOnlineUsersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XCLoginACK::XCLoginACK()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_xc_5fprotoc_2eproto::scc_info_XCLoginACK.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xc.protoc.XCLoginACK)
}
XCLoginACK::XCLoginACK(const XCLoginACK& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&onlineusers_) -
    reinterpret_cast<char*>(&result_)) + sizeof(onlineusers_));
  // @@protoc_insertion_point(copy_constructor:xc.protoc.XCLoginACK)
}

void XCLoginACK::SharedCtor() {
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&onlineusers_) -
      reinterpret_cast<char*>(&result_)) + sizeof(onlineusers_));
}

XCLoginACK::~XCLoginACK() {
  // @@protoc_insertion_point(destructor:xc.protoc.XCLoginACK)
  SharedDtor();
}

void XCLoginACK::SharedDtor() {
}

void XCLoginACK::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XCLoginACK::descriptor() {
  ::protobuf_xc_5fprotoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xc_5fprotoc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XCLoginACK& XCLoginACK::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_xc_5fprotoc_2eproto::scc_info_XCLoginACK.base);
  return *internal_default_instance();
}


void XCLoginACK::Clear() {
// @@protoc_insertion_point(message_clear_start:xc.protoc.XCLoginACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&onlineusers_) -
        reinterpret_cast<char*>(&result_)) + sizeof(onlineusers_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool XCLoginACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xc.protoc.XCLoginACK)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isManager = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ismanager();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ismanager_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 onlineUsers = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_onlineusers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &onlineusers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xc.protoc.XCLoginACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xc.protoc.XCLoginACK)
  return false;
#undef DO_
}

void XCLoginACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xc.protoc.XCLoginACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional bool isManager = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->ismanager(), output);
  }

  // optional sint64 onlineUsers = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(3, this->onlineusers(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xc.protoc.XCLoginACK)
}

::google::protobuf::uint8* XCLoginACK::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xc.protoc.XCLoginACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional bool isManager = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->ismanager(), target);
  }

  // optional sint64 onlineUsers = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(3, this->onlineusers(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xc.protoc.XCLoginACK)
  return target;
}

size_t XCLoginACK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xc.protoc.XCLoginACK)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional bool isManager = 2;
    if (has_ismanager()) {
      total_size += 1 + 1;
    }

    // optional sint64 onlineUsers = 3;
    if (has_onlineusers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->onlineusers());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XCLoginACK::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xc.protoc.XCLoginACK)
  GOOGLE_DCHECK_NE(&from, this);
  const XCLoginACK* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XCLoginACK>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xc.protoc.XCLoginACK)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xc.protoc.XCLoginACK)
    MergeFrom(*source);
  }
}

void XCLoginACK::MergeFrom(const XCLoginACK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xc.protoc.XCLoginACK)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      ismanager_ = from.ismanager_;
    }
    if (cached_has_bits & 0x00000004u) {
      onlineusers_ = from.onlineusers_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void XCLoginACK::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xc.protoc.XCLoginACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XCLoginACK::CopyFrom(const XCLoginACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xc.protoc.XCLoginACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XCLoginACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void XCLoginACK::Swap(XCLoginACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XCLoginACK::InternalSwap(XCLoginACK* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(ismanager_, other->ismanager_);
  swap(onlineusers_, other->onlineusers_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XCLoginACK::GetMetadata() const {
  protobuf_xc_5fprotoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xc_5fprotoc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XCLogout::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XCLogout::XCLogout()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_xc_5fprotoc_2eproto::scc_info_XCLogout.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xc.protoc.XCLogout)
}
XCLogout::XCLogout(const XCLogout& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:xc.protoc.XCLogout)
}

void XCLogout::SharedCtor() {
}

XCLogout::~XCLogout() {
  // @@protoc_insertion_point(destructor:xc.protoc.XCLogout)
  SharedDtor();
}

void XCLogout::SharedDtor() {
}

void XCLogout::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XCLogout::descriptor() {
  ::protobuf_xc_5fprotoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xc_5fprotoc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XCLogout& XCLogout::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_xc_5fprotoc_2eproto::scc_info_XCLogout.base);
  return *internal_default_instance();
}


void XCLogout::Clear() {
// @@protoc_insertion_point(message_clear_start:xc.protoc.XCLogout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool XCLogout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xc.protoc.XCLogout)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:xc.protoc.XCLogout)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xc.protoc.XCLogout)
  return false;
#undef DO_
}

void XCLogout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xc.protoc.XCLogout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xc.protoc.XCLogout)
}

::google::protobuf::uint8* XCLogout::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xc.protoc.XCLogout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xc.protoc.XCLogout)
  return target;
}

size_t XCLogout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xc.protoc.XCLogout)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XCLogout::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xc.protoc.XCLogout)
  GOOGLE_DCHECK_NE(&from, this);
  const XCLogout* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XCLogout>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xc.protoc.XCLogout)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xc.protoc.XCLogout)
    MergeFrom(*source);
  }
}

void XCLogout::MergeFrom(const XCLogout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xc.protoc.XCLogout)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void XCLogout::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xc.protoc.XCLogout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XCLogout::CopyFrom(const XCLogout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xc.protoc.XCLogout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XCLogout::IsInitialized() const {
  return true;
}

void XCLogout::Swap(XCLogout* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XCLogout::InternalSwap(XCLogout* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XCLogout::GetMetadata() const {
  protobuf_xc_5fprotoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xc_5fprotoc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XCServerCloseBRO::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XCServerCloseBRO::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XCServerCloseBRO::XCServerCloseBRO()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_xc_5fprotoc_2eproto::scc_info_XCServerCloseBRO.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xc.protoc.XCServerCloseBRO)
}
XCServerCloseBRO::XCServerCloseBRO(const XCServerCloseBRO& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  // @@protoc_insertion_point(copy_constructor:xc.protoc.XCServerCloseBRO)
}

void XCServerCloseBRO::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

XCServerCloseBRO::~XCServerCloseBRO() {
  // @@protoc_insertion_point(destructor:xc.protoc.XCServerCloseBRO)
  SharedDtor();
}

void XCServerCloseBRO::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XCServerCloseBRO::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XCServerCloseBRO::descriptor() {
  ::protobuf_xc_5fprotoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xc_5fprotoc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XCServerCloseBRO& XCServerCloseBRO::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_xc_5fprotoc_2eproto::scc_info_XCServerCloseBRO.base);
  return *internal_default_instance();
}


void XCServerCloseBRO::Clear() {
// @@protoc_insertion_point(message_clear_start:xc.protoc.XCServerCloseBRO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool XCServerCloseBRO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xc.protoc.XCServerCloseBRO)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xc.protoc.XCServerCloseBRO.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xc.protoc.XCServerCloseBRO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xc.protoc.XCServerCloseBRO)
  return false;
#undef DO_
}

void XCServerCloseBRO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xc.protoc.XCServerCloseBRO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xc.protoc.XCServerCloseBRO.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xc.protoc.XCServerCloseBRO)
}

::google::protobuf::uint8* XCServerCloseBRO::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xc.protoc.XCServerCloseBRO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string msg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xc.protoc.XCServerCloseBRO.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xc.protoc.XCServerCloseBRO)
  return target;
}

size_t XCServerCloseBRO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xc.protoc.XCServerCloseBRO)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string msg = 1;
  if (has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XCServerCloseBRO::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xc.protoc.XCServerCloseBRO)
  GOOGLE_DCHECK_NE(&from, this);
  const XCServerCloseBRO* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XCServerCloseBRO>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xc.protoc.XCServerCloseBRO)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xc.protoc.XCServerCloseBRO)
    MergeFrom(*source);
  }
}

void XCServerCloseBRO::MergeFrom(const XCServerCloseBRO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xc.protoc.XCServerCloseBRO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msg()) {
    set_has_msg();
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void XCServerCloseBRO::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xc.protoc.XCServerCloseBRO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XCServerCloseBRO::CopyFrom(const XCServerCloseBRO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xc.protoc.XCServerCloseBRO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XCServerCloseBRO::IsInitialized() const {
  return true;
}

void XCServerCloseBRO::Swap(XCServerCloseBRO* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XCServerCloseBRO::InternalSwap(XCServerCloseBRO* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XCServerCloseBRO::GetMetadata() const {
  protobuf_xc_5fprotoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xc_5fprotoc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChatPlayer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatPlayer::kIdFieldNumber;
const int ChatPlayer::kNameFieldNumber;
const int ChatPlayer::kHeadImgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatPlayer::ChatPlayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_xc_5fprotoc_2eproto::scc_info_ChatPlayer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xc.protoc.ChatPlayer)
}
ChatPlayer::ChatPlayer(const ChatPlayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  headimg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_headimg()) {
    headimg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headimg_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:xc.protoc.ChatPlayer)
}

void ChatPlayer::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headimg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_LONGLONG(0);
}

ChatPlayer::~ChatPlayer() {
  // @@protoc_insertion_point(destructor:xc.protoc.ChatPlayer)
  SharedDtor();
}

void ChatPlayer::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headimg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChatPlayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChatPlayer::descriptor() {
  ::protobuf_xc_5fprotoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xc_5fprotoc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatPlayer& ChatPlayer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_xc_5fprotoc_2eproto::scc_info_ChatPlayer.base);
  return *internal_default_instance();
}


void ChatPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:xc.protoc.ChatPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      headimg_.ClearNonDefaultToEmptyNoArena();
    }
  }
  id_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChatPlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xc.protoc.ChatPlayer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xc.protoc.ChatPlayer.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string headImg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_headimg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->headimg().data(), static_cast<int>(this->headimg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xc.protoc.ChatPlayer.headImg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xc.protoc.ChatPlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xc.protoc.ChatPlayer)
  return false;
#undef DO_
}

void ChatPlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xc.protoc.ChatPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->id(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xc.protoc.ChatPlayer.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string headImg = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headimg().data(), static_cast<int>(this->headimg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xc.protoc.ChatPlayer.headImg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->headimg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xc.protoc.ChatPlayer)
}

::google::protobuf::uint8* ChatPlayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xc.protoc.ChatPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xc.protoc.ChatPlayer.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string headImg = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headimg().data(), static_cast<int>(this->headimg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xc.protoc.ChatPlayer.headImg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->headimg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xc.protoc.ChatPlayer)
  return target;
}

size_t ChatPlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xc.protoc.ChatPlayer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string headImg = 3;
    if (has_headimg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->headimg());
    }

    // optional sint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChatPlayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xc.protoc.ChatPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatPlayer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatPlayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xc.protoc.ChatPlayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xc.protoc.ChatPlayer)
    MergeFrom(*source);
  }
}

void ChatPlayer::MergeFrom(const ChatPlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xc.protoc.ChatPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_headimg();
      headimg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headimg_);
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChatPlayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xc.protoc.ChatPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatPlayer::CopyFrom(const ChatPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xc.protoc.ChatPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatPlayer::IsInitialized() const {
  return true;
}

void ChatPlayer::Swap(ChatPlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatPlayer::InternalSwap(ChatPlayer* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  headimg_.Swap(&other->headimg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChatPlayer::GetMetadata() const {
  protobuf_xc_5fprotoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xc_5fprotoc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XCOnlineCountBRO::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XCOnlineCountBRO::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XCOnlineCountBRO::XCOnlineCountBRO()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_xc_5fprotoc_2eproto::scc_info_XCOnlineCountBRO.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xc.protoc.XCOnlineCountBRO)
}
XCOnlineCountBRO::XCOnlineCountBRO(const XCOnlineCountBRO& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:xc.protoc.XCOnlineCountBRO)
}

void XCOnlineCountBRO::SharedCtor() {
  count_ = GOOGLE_LONGLONG(0);
}

XCOnlineCountBRO::~XCOnlineCountBRO() {
  // @@protoc_insertion_point(destructor:xc.protoc.XCOnlineCountBRO)
  SharedDtor();
}

void XCOnlineCountBRO::SharedDtor() {
}

void XCOnlineCountBRO::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XCOnlineCountBRO::descriptor() {
  ::protobuf_xc_5fprotoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xc_5fprotoc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XCOnlineCountBRO& XCOnlineCountBRO::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_xc_5fprotoc_2eproto::scc_info_XCOnlineCountBRO.base);
  return *internal_default_instance();
}


void XCOnlineCountBRO::Clear() {
// @@protoc_insertion_point(message_clear_start:xc.protoc.XCOnlineCountBRO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  count_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool XCOnlineCountBRO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xc.protoc.XCOnlineCountBRO)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xc.protoc.XCOnlineCountBRO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xc.protoc.XCOnlineCountBRO)
  return false;
#undef DO_
}

void XCOnlineCountBRO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xc.protoc.XCOnlineCountBRO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 count = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xc.protoc.XCOnlineCountBRO)
}

::google::protobuf::uint8* XCOnlineCountBRO::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xc.protoc.XCOnlineCountBRO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 count = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xc.protoc.XCOnlineCountBRO)
  return target;
}

size_t XCOnlineCountBRO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xc.protoc.XCOnlineCountBRO)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint64 count = 1;
  if (has_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XCOnlineCountBRO::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xc.protoc.XCOnlineCountBRO)
  GOOGLE_DCHECK_NE(&from, this);
  const XCOnlineCountBRO* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XCOnlineCountBRO>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xc.protoc.XCOnlineCountBRO)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xc.protoc.XCOnlineCountBRO)
    MergeFrom(*source);
  }
}

void XCOnlineCountBRO::MergeFrom(const XCOnlineCountBRO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xc.protoc.XCOnlineCountBRO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_count()) {
    set_count(from.count());
  }
}

void XCOnlineCountBRO::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xc.protoc.XCOnlineCountBRO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XCOnlineCountBRO::CopyFrom(const XCOnlineCountBRO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xc.protoc.XCOnlineCountBRO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XCOnlineCountBRO::IsInitialized() const {
  return true;
}

void XCOnlineCountBRO::Swap(XCOnlineCountBRO* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XCOnlineCountBRO::InternalSwap(XCOnlineCountBRO* other) {
  using std::swap;
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XCOnlineCountBRO::GetMetadata() const {
  protobuf_xc_5fprotoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xc_5fprotoc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XCChatMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XCChatMsg::kTypeFieldNumber;
const int XCChatMsg::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XCChatMsg::XCChatMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_xc_5fprotoc_2eproto::scc_info_XCChatMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xc.protoc.XCChatMsg)
}
XCChatMsg::XCChatMsg(const XCChatMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_content()) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:xc.protoc.XCChatMsg)
}

void XCChatMsg::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

XCChatMsg::~XCChatMsg() {
  // @@protoc_insertion_point(destructor:xc.protoc.XCChatMsg)
  SharedDtor();
}

void XCChatMsg::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XCChatMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XCChatMsg::descriptor() {
  ::protobuf_xc_5fprotoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xc_5fprotoc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XCChatMsg& XCChatMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_xc_5fprotoc_2eproto::scc_info_XCChatMsg.base);
  return *internal_default_instance();
}


void XCChatMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:xc.protoc.XCChatMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    content_.ClearNonDefaultToEmptyNoArena();
  }
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool XCChatMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xc.protoc.XCChatMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xc.protoc.XCChatMsg.content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xc.protoc.XCChatMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xc.protoc.XCChatMsg)
  return false;
#undef DO_
}

void XCChatMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xc.protoc.XCChatMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->type(), output);
  }

  // optional string content = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xc.protoc.XCChatMsg.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xc.protoc.XCChatMsg)
}

::google::protobuf::uint8* XCChatMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xc.protoc.XCChatMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->type(), target);
  }

  // optional string content = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xc.protoc.XCChatMsg.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xc.protoc.XCChatMsg)
  return target;
}

size_t XCChatMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xc.protoc.XCChatMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string content = 2;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

    // optional sint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XCChatMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xc.protoc.XCChatMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const XCChatMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XCChatMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xc.protoc.XCChatMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xc.protoc.XCChatMsg)
    MergeFrom(*source);
  }
}

void XCChatMsg::MergeFrom(const XCChatMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xc.protoc.XCChatMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_content();
      content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void XCChatMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xc.protoc.XCChatMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XCChatMsg::CopyFrom(const XCChatMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xc.protoc.XCChatMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XCChatMsg::IsInitialized() const {
  return true;
}

void XCChatMsg::Swap(XCChatMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XCChatMsg::InternalSwap(XCChatMsg* other) {
  using std::swap;
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XCChatMsg::GetMetadata() const {
  protobuf_xc_5fprotoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xc_5fprotoc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XCChatMsgBRO::InitAsDefaultInstance() {
  ::xc::protoc::_XCChatMsgBRO_default_instance_._instance.get_mutable()->player_ = const_cast< ::xc::protoc::ChatPlayer*>(
      ::xc::protoc::ChatPlayer::internal_default_instance());
  ::xc::protoc::_XCChatMsgBRO_default_instance_._instance.get_mutable()->chat_ = const_cast< ::xc::protoc::XCChatMsg*>(
      ::xc::protoc::XCChatMsg::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XCChatMsgBRO::kPlayerFieldNumber;
const int XCChatMsgBRO::kChatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XCChatMsgBRO::XCChatMsgBRO()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_xc_5fprotoc_2eproto::scc_info_XCChatMsgBRO.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xc.protoc.XCChatMsgBRO)
}
XCChatMsgBRO::XCChatMsgBRO(const XCChatMsgBRO& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player()) {
    player_ = new ::xc::protoc::ChatPlayer(*from.player_);
  } else {
    player_ = NULL;
  }
  if (from.has_chat()) {
    chat_ = new ::xc::protoc::XCChatMsg(*from.chat_);
  } else {
    chat_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:xc.protoc.XCChatMsgBRO)
}

void XCChatMsgBRO::SharedCtor() {
  ::memset(&player_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chat_) -
      reinterpret_cast<char*>(&player_)) + sizeof(chat_));
}

XCChatMsgBRO::~XCChatMsgBRO() {
  // @@protoc_insertion_point(destructor:xc.protoc.XCChatMsgBRO)
  SharedDtor();
}

void XCChatMsgBRO::SharedDtor() {
  if (this != internal_default_instance()) delete player_;
  if (this != internal_default_instance()) delete chat_;
}

void XCChatMsgBRO::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XCChatMsgBRO::descriptor() {
  ::protobuf_xc_5fprotoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xc_5fprotoc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XCChatMsgBRO& XCChatMsgBRO::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_xc_5fprotoc_2eproto::scc_info_XCChatMsgBRO.base);
  return *internal_default_instance();
}


void XCChatMsgBRO::Clear() {
// @@protoc_insertion_point(message_clear_start:xc.protoc.XCChatMsgBRO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(player_ != NULL);
      player_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(chat_ != NULL);
      chat_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool XCChatMsgBRO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xc.protoc.XCChatMsgBRO)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .xc.protoc.ChatPlayer player = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .xc.protoc.XCChatMsg chat = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_chat()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xc.protoc.XCChatMsgBRO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xc.protoc.XCChatMsgBRO)
  return false;
#undef DO_
}

void XCChatMsgBRO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xc.protoc.XCChatMsgBRO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .xc.protoc.ChatPlayer player = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_player(), output);
  }

  // optional .xc.protoc.XCChatMsg chat = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_chat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xc.protoc.XCChatMsgBRO)
}

::google::protobuf::uint8* XCChatMsgBRO::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xc.protoc.XCChatMsgBRO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .xc.protoc.ChatPlayer player = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_player(), deterministic, target);
  }

  // optional .xc.protoc.XCChatMsg chat = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_chat(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xc.protoc.XCChatMsgBRO)
  return target;
}

size_t XCChatMsgBRO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xc.protoc.XCChatMsgBRO)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .xc.protoc.ChatPlayer player = 1;
    if (has_player()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *player_);
    }

    // optional .xc.protoc.XCChatMsg chat = 2;
    if (has_chat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *chat_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XCChatMsgBRO::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xc.protoc.XCChatMsgBRO)
  GOOGLE_DCHECK_NE(&from, this);
  const XCChatMsgBRO* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XCChatMsgBRO>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xc.protoc.XCChatMsgBRO)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xc.protoc.XCChatMsgBRO)
    MergeFrom(*source);
  }
}

void XCChatMsgBRO::MergeFrom(const XCChatMsgBRO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xc.protoc.XCChatMsgBRO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_player()->::xc::protoc::ChatPlayer::MergeFrom(from.player());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_chat()->::xc::protoc::XCChatMsg::MergeFrom(from.chat());
    }
  }
}

void XCChatMsgBRO::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xc.protoc.XCChatMsgBRO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XCChatMsgBRO::CopyFrom(const XCChatMsgBRO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xc.protoc.XCChatMsgBRO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XCChatMsgBRO::IsInitialized() const {
  return true;
}

void XCChatMsgBRO::Swap(XCChatMsgBRO* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XCChatMsgBRO::InternalSwap(XCChatMsgBRO* other) {
  using std::swap;
  swap(player_, other->player_);
  swap(chat_, other->chat_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XCChatMsgBRO::GetMetadata() const {
  protobuf_xc_5fprotoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xc_5fprotoc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XCSystemMsgBRO::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XCSystemMsgBRO::kTypeFieldNumber;
const int XCSystemMsgBRO::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XCSystemMsgBRO::XCSystemMsgBRO()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_xc_5fprotoc_2eproto::scc_info_XCSystemMsgBRO.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:xc.protoc.XCSystemMsgBRO)
}
XCSystemMsgBRO::XCSystemMsgBRO(const XCSystemMsgBRO& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      content_(from.content_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:xc.protoc.XCSystemMsgBRO)
}

void XCSystemMsgBRO::SharedCtor() {
  type_ = 0;
}

XCSystemMsgBRO::~XCSystemMsgBRO() {
  // @@protoc_insertion_point(destructor:xc.protoc.XCSystemMsgBRO)
  SharedDtor();
}

void XCSystemMsgBRO::SharedDtor() {
}

void XCSystemMsgBRO::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* XCSystemMsgBRO::descriptor() {
  ::protobuf_xc_5fprotoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xc_5fprotoc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XCSystemMsgBRO& XCSystemMsgBRO::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_xc_5fprotoc_2eproto::scc_info_XCSystemMsgBRO.base);
  return *internal_default_instance();
}


void XCSystemMsgBRO::Clear() {
// @@protoc_insertion_point(message_clear_start:xc.protoc.XCSystemMsgBRO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool XCSystemMsgBRO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:xc.protoc.XCSystemMsgBRO)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content(this->content_size() - 1).data(),
            static_cast<int>(this->content(this->content_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xc.protoc.XCSystemMsgBRO.content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:xc.protoc.XCSystemMsgBRO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:xc.protoc.XCSystemMsgBRO)
  return false;
#undef DO_
}

void XCSystemMsgBRO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:xc.protoc.XCSystemMsgBRO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->type(), output);
  }

  // repeated string content = 2;
  for (int i = 0, n = this->content_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content(i).data(), static_cast<int>(this->content(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xc.protoc.XCSystemMsgBRO.content");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->content(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:xc.protoc.XCSystemMsgBRO)
}

::google::protobuf::uint8* XCSystemMsgBRO::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:xc.protoc.XCSystemMsgBRO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->type(), target);
  }

  // repeated string content = 2;
  for (int i = 0, n = this->content_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content(i).data(), static_cast<int>(this->content(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xc.protoc.XCSystemMsgBRO.content");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->content(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xc.protoc.XCSystemMsgBRO)
  return target;
}

size_t XCSystemMsgBRO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xc.protoc.XCSystemMsgBRO)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string content = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->content_size());
  for (int i = 0, n = this->content_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->content(i));
  }

  // optional sint32 type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void XCSystemMsgBRO::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xc.protoc.XCSystemMsgBRO)
  GOOGLE_DCHECK_NE(&from, this);
  const XCSystemMsgBRO* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XCSystemMsgBRO>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xc.protoc.XCSystemMsgBRO)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xc.protoc.XCSystemMsgBRO)
    MergeFrom(*source);
  }
}

void XCSystemMsgBRO::MergeFrom(const XCSystemMsgBRO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xc.protoc.XCSystemMsgBRO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
  if (from.has_type()) {
    set_type(from.type());
  }
}

void XCSystemMsgBRO::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xc.protoc.XCSystemMsgBRO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XCSystemMsgBRO::CopyFrom(const XCSystemMsgBRO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xc.protoc.XCSystemMsgBRO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XCSystemMsgBRO::IsInitialized() const {
  return true;
}

void XCSystemMsgBRO::Swap(XCSystemMsgBRO* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XCSystemMsgBRO::InternalSwap(XCSystemMsgBRO* other) {
  using std::swap;
  content_.InternalSwap(CastToBase(&other->content_));
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata XCSystemMsgBRO::GetMetadata() const {
  protobuf_xc_5fprotoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xc_5fprotoc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protoc
}  // namespace xc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xc::protoc::XCAlive* Arena::CreateMaybeMessage< ::xc::protoc::XCAlive >(Arena* arena) {
  return Arena::CreateInternal< ::xc::protoc::XCAlive >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xc::protoc::XCAliveACK* Arena::CreateMaybeMessage< ::xc::protoc::XCAliveACK >(Arena* arena) {
  return Arena::CreateInternal< ::xc::protoc::XCAliveACK >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xc::protoc::XCLogin* Arena::CreateMaybeMessage< ::xc::protoc::XCLogin >(Arena* arena) {
  return Arena::CreateInternal< ::xc::protoc::XCLogin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xc::protoc::XCLoginACK* Arena::CreateMaybeMessage< ::xc::protoc::XCLoginACK >(Arena* arena) {
  return Arena::CreateInternal< ::xc::protoc::XCLoginACK >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xc::protoc::XCLogout* Arena::CreateMaybeMessage< ::xc::protoc::XCLogout >(Arena* arena) {
  return Arena::CreateInternal< ::xc::protoc::XCLogout >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xc::protoc::XCServerCloseBRO* Arena::CreateMaybeMessage< ::xc::protoc::XCServerCloseBRO >(Arena* arena) {
  return Arena::CreateInternal< ::xc::protoc::XCServerCloseBRO >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xc::protoc::ChatPlayer* Arena::CreateMaybeMessage< ::xc::protoc::ChatPlayer >(Arena* arena) {
  return Arena::CreateInternal< ::xc::protoc::ChatPlayer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xc::protoc::XCOnlineCountBRO* Arena::CreateMaybeMessage< ::xc::protoc::XCOnlineCountBRO >(Arena* arena) {
  return Arena::CreateInternal< ::xc::protoc::XCOnlineCountBRO >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xc::protoc::XCChatMsg* Arena::CreateMaybeMessage< ::xc::protoc::XCChatMsg >(Arena* arena) {
  return Arena::CreateInternal< ::xc::protoc::XCChatMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xc::protoc::XCChatMsgBRO* Arena::CreateMaybeMessage< ::xc::protoc::XCChatMsgBRO >(Arena* arena) {
  return Arena::CreateInternal< ::xc::protoc::XCChatMsgBRO >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::xc::protoc::XCSystemMsgBRO* Arena::CreateMaybeMessage< ::xc::protoc::XCSystemMsgBRO >(Arena* arena) {
  return Arena::CreateInternal< ::xc::protoc::XCSystemMsgBRO >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
